@* Add a route parameter, this parameter needs a corresponding parameter attribute to work.
   It will be called by /my-machines/123
   Without the parameter added to the URL, we will get a 404, this is avoided by adding the ? behind the parameter.
   The :int means we will only bind int values to the parameter (otherwise the parameter has to be a string).
*@
@page "/my-machines/{machineid:int?}"
@using MyMachines.Components.SubComponents
@* @page "/my-machines" *@

@rendermode InteractiveServer

<PageTitle>MyMachines - Display machines</PageTitle>
<h3>MyMachines</h3>


@if (MachineId == 0)
{
    <div>These are all the machines</div>
}
else
{

    <div>This is the machine: @MachineId</div>
}

@if (myMachinesList == null) // This can be used to show something while loading content
{
    <p><em>Loading...</em></p>
}
else
{
    <div>This is a list of machines</div>
    <div>@myMachinesList</div>
}
<button class="btn btn-primary" @onclick="UpdateMachineListAsync">Update machine list</button>
<button class="btn btn-primary" @onclick="() => myMachinesList += ';' + myMachinesList">Duplicate machine list</button>

<div>
    <input @onchange="OnChange">
    <p>@text</p>
</div>
<div>

    <input @oninput="OnInput">
    <p>@text2</p>
</div>

<CrossComponentEventButton OnClick="UpdateMachineListAsync" class="btn btn-outline-primary">Click the button</CrossComponentEventButton>


@code {

    private string myMachinesList = null;
    string text;
    string text2;

    protected override void OnInitialized()
    {
        // For testing purposes only
        Task.Delay(1000);

        //base.OnInitialized();
        myMachinesList = "Machine1;Machine2";
    }


    [Parameter]
    public int MachineId { get; set; } // Same name as the route paramater, to pick it up. Not case sensitive.

    async Task UpdateMachineListAsync()
    {
        myMachinesList = "NewMachine1;NewMachine2";
    }


    // TODO: Hämta data i onbeforerender med parameter för att det ska vara den första
    // IDisposable/Dispose


    private void OnChange(ChangeEventArgs e)
    {
        text = (string)e.Value;
    }
    private void OnInput(ChangeEventArgs e)
    {
        text2 = (string)e.Value;
    }
}
